> set cluster setting sql.query_cache.enabled=true;
SET CLUSTER SETTING
> drop database if EXISTS test;
DROP DATABASE
> drop database if EXISTS test_ts;
DROP DATABASE
> create database test;
CREATE DATABASE
> use test;
SET
> create table test1(col1 smallint primary key, col2 int, col3 bigint, col4 float, col5 bool, col6 varchar);
CREATE TABLE
> insert into test1 values(1000,1000000,100000000000000000,100000000000000000.101,true, 'test_c1'), (2000,2000000,200000000000000000,200000000000000000.202,true, 'test_c2');
INSERT 2
> create ts database test_ts;
CREATE TS DATABASE
> use test_ts;
SET
> create table ts_table
(time timestamp not null, e1 smallint, e2 int, e3 bigint, e4 float, e5 bool, e6 varchar)
attributes (attr1 smallint not null, attr2 int not null, attr3 bigint, attr4 float, attr5 bool, attr6 varchar)
primary attributes (attr1, attr2);
CREATE TABLE
> create table ts_table2
(time timestamp not null, e1 smallint, e2 int, e3 bigint, e4 float, e5 bool, e6 varchar)
attributes (attr1 smallint not null, attr2 int not null, attr3 bigint, attr4 float, attr5 bool, attr6 varchar)
primary attributes (attr1, attr2);
CREATE TABLE
> insert into ts_table values('2023-05-31 10:00:00', 1000,1000000,100000000000000000,100000000000000000.101,true, 'test_ts1', 1000, 1000000, 1000000000, 100.11, false, 'test_attr_ts'), ('2023-05-31 11:00:00', 2000,2000000,200000000000000000,200000000000000000.202,true, 'test_ts1', 1000, 1000000, 1000000000, 100.11, false, 'test_attr_ts');
INSERT 2
> insert into ts_table2 values('2023-05-31 10:00:00', 1000,1000000,100000000000000000,100000000000000000.101,true, 'test_ts1', 1000, 1000000, 1000000000, 100.11, false, 'test_attr_ts'), ('2023-05-31 11:00:00', 2000,2000000,200000000000000000,200000000000000000.202,true, 'test_ts1', 1000, 1000000, 1000000000, 100.11, false, 'test_attr_ts');
INSERT 2
> insert into ts_table(time, e1, e2, e3, e4, e5, e6, attr1, attr2, attr3, attr4, attr5, attr6) select time, e1, e2, e3, e4, e5, e6, attr1+1, attr2, attr3, attr4, attr5, attr6 from ts_table;
INSERT 2
> insert into ts_table(time, e1, e2, e3, e4, e5, e6, attr1, attr2, attr3, attr4, attr5, attr6) select time, e1, e2, e3, e4, e5, e6, attr1+2, attr2, attr3, attr4, attr5, attr6 from ts_table;
INSERT 4
> insert into ts_table(time, e1, e2, e3, e4, e5, e6, attr1, attr2, attr3, attr4, attr5, attr6) select time, e1, e2, e3, e4, e5, e6, attr1+3, attr2, attr3, attr4, attr5, attr6 from ts_table;
INSERT 8
> insert into ts_table(time, e1, e2, e3, e4, e5, e6, attr1, attr2, attr3, attr4, attr5, attr6) select time, e1, e2, e3, e4, e5, e6, attr1+4, attr2, attr3, attr4, attr5, attr6 from ts_table;
INSERT 14
> insert into ts_table(time, e1, e2, e3, e4, e5, e6, attr1, attr2, attr3, attr4, attr5, attr6) select time, e1, e2, e3, e4, e5, e6, attr1+5, attr2, attr3, attr4, attr5, attr6 from ts_table;
INSERT 22
> select count(1) from ts_table;
  count
---------
     32
(1 row)
> set cluster setting sql.auto_limit.quantity=10;
SET CLUSTER SETTING
> explain select * from test_ts.ts_table;
           tree          |    field    |  description
-------------------------+-------------+-----------------
                         | distributed | true
                         | vectorized  | false
  limit                  |             |
   │                     | engine type | time series
   │                     | count       | 10
   └── synchronizer      |             |
        └── limit        |             |
             │           | engine type | time series
             │           | count       | 10
             └── ts scan |             |
                         | ts-table    | ts_table
                         | access mode | tableTableMeta
(12 rows)
> explain with with_table as (select * from test_ts.ts_table) select * from with_table where e1=1000;
             tree             |    field    |  description
------------------------------+-------------+-----------------
                              | distributed | true
                              | vectorized  | false
  render                      |             |
   │                          | engine type | time series
   │                          | time        | "time"
   │                          | e1          | e1
   │                          | e2          | e2
   │                          | e3          | e3
   │                          | e4          | e4
   │                          | e5          | e5
   │                          | e6          | e6
   │                          | attr1       | attr1
   │                          | attr2       | attr2
   │                          | attr3       | attr3
   │                          | attr4       | attr4
   │                          | attr5       | attr5
   │                          | attr6       | attr6
   └── limit                  |             |
        │                     | engine type | time series
        │                     | count       | 10
        └── synchronizer      |             |
             └── limit        |             |
                  │           | engine type | time series
                  │           | count       | 10
                  └── ts scan |             |
                              | ts-table    | ts_table
                              | access mode | tableTableMeta
                              | filter      | e1 = 1000
(28 rows)
> explain select e1 from test_ts.ts_table union select col1 from test.test1 order by e1;
             tree             |    field    |  description
------------------------------+-------------+----------------
                              | distributed | true
                              | vectorized  | false
  limit                       |             |
   │                          | count       | 10
   └── sort                   |             |
        │                     | order       | +e1
        └── union             |             |
             ├── scan         |             |
             │                | table       | test1@primary
             │                | spans       | FULL SCAN
             └── synchronizer |             |
                  └── ts scan |             |
                              | ts-table    | ts_table
                              | access mode | metaTable
(14 rows)
> explain (select e1 from test_ts.ts_table limit 1) union select col1 from test.test1 order by e1;
                  tree                  |    field    |  description
----------------------------------------+-------------+----------------
                                        | distributed | true
                                        | vectorized  | false
  limit                                 |             |
   │                                    | count       | 10
   └── sort                             |             |
        │                               | order       | +e1
        └── union                       |             |
             ├── scan                   |             |
             │                          | table       | test1@primary
             │                          | spans       | FULL SCAN
             └── limit                  |             |
                  │                     | engine type | time series
                  │                     | count       | 1
                  └── synchronizer      |             |
                       └── limit        |             |
                            │           | engine type | time series
                            │           | count       | 1
                            └── ts scan |             |
                                        | ts-table    | ts_table
                                        | access mode | metaTable
(20 rows)
> explain select e1 from test_ts.ts_table union (select col1 from test.test1 limit 1) order by e1;
             tree             |    field    |  description
------------------------------+-------------+----------------
                              | distributed | true
                              | vectorized  | false
  limit                       |             |
   │                          | count       | 10
   └── sort                   |             |
        │                     | order       | +e1
        └── union             |             |
             ├── scan         |             |
             │                | table       | test1@primary
             │                | spans       | LIMITED SCAN
             │                | limit       | 1
             └── synchronizer |             |
                  └── ts scan |             |
                              | ts-table    | ts_table
                              | access mode | metaTable
(15 rows)
> explain select * from test_ts.ts_table where e1 in (select col1 from test.test1 limit 1) order by e2;
             tree             |       field        |  description
------------------------------+--------------------+-----------------
                              | distributed        | true
                              | vectorized         | false
  limit                       |                    |
   │                          | count              | 10
   └── sort                   |                    |
        │                     | order              | +e2
        └── hash-join         |                    |
             │                | type               | semi
             │                | equality           | (e1) = (col1)
             │                | right cols are key |
             ├── synchronizer |                    |
             │    └── ts scan |                    |
             │                | ts-table           | ts_table
             │                | access mode        | tableTableMeta
             └── scan         |                    |
                              | table              | test1@primary
                              | spans              | LIMITED SCAN
                              | limit              | 1
(18 rows)
> explain select e1 = ( select col1 from test.test1 limit 1 ) from test_ts.ts_table order by e1;
                tree               |    field     |                description
-----------------------------------+--------------+---------------------------------------------
                                   | distributed  | true
                                   | vectorized   | false
  root                             |              |
   ├── render                      |              |
   │    │                          | engine type  | time series
   │    │                          | ?column?     | e1 = (SELECT col1 FROM test.test1 LIMIT 1)
   │    └── limit                  |              |
   │         │                     | engine type  | time series
   │         │                     | count        | 10
   │         └── sort              |              |
   │              │                | order        | +e1
   │              └── synchronizer |              |
   │                   └── ts scan |              |
   │                               | ts-table     | ts_table
   │                               | access mode  | metaTable
   └── subquery                    |              |
        │                          | id           | @S1
        │                          | original sql | (SELECT col1 FROM test.test1 LIMIT 1)
        │                          | exec mode    | one row
        └── scan                   |              |
                                   | table        | test1@primary
                                   | spans        | LIMITED SCAN
                                   | limit        | 1
(23 rows)
> explain select * from test_ts.ts_table as t1 where exists (select col1 from test.test1 as t2 where t1.e1=t2.col1 group by col1 having col1 < 2000 limit 1) order by e1;
             tree             |       field        |  description
------------------------------+--------------------+-----------------
                              | distributed        | true
                              | vectorized         | false
  limit                       |                    |
   │                          | count              | 10
   └── sort                   |                    |
        │                     | order              | +e1
        └── hash-join         |                    |
             │                | type               | semi
             │                | equality           | (e1) = (col1)
             │                | right cols are key |
             ├── synchronizer |                    |
             │    └── ts scan |                    |
             │                | ts-table           | ts_table
             │                | access mode        | tableTableMeta
             │                | filter             | e1 < 2000
             └── scan         |                    |
                              | table              | test1@primary
                              | spans              | -/1999/#
(18 rows)
> explain select e2 from test_ts.ts_table as t1 join test.test1 as t2 on t1.e1=t2.col1 order by e2;
                tree               |       field        |  description
-----------------------------------+--------------------+----------------
                                   | distributed        | true
                                   | vectorized         | false
  render                           |                    |
   │                               | e2                 | e2
   └── limit                       |                    |
        │                          | count              | 10
        └── sort                   |                    |
             │                     | order              | +e2
             └── hash-join         |                    |
                  │                | type               | inner
                  │                | equality           | (e1) = (col1)
                  │                | right cols are key |
                  ├── synchronizer |                    |
                  │    └── ts scan |                    |
                  │                | ts-table           | ts_table
                  │                | access mode        | metaTable
                  └── scan         |                    |
                                   | table              | test1@primary
                                   | spans              | FULL SCAN
(19 rows)
> prepare p1 as select attr1 from test_ts.ts_table group by attr1 order by attr1;
PREPARE
> execute p1;
  attr1
---------
   1000
   1001
   1002
   1003
   1004
   1005
   1006
   1007
   1008
   1009
(10 rows)
> prepare p2 as select attr1 from test_ts.ts_table group by attr1 order by attr1 limit $1;
PREPARE
> execute p2(11);
  attr1
---------
   1000
   1001
   1002
   1003
   1004
   1005
   1006
   1007
   1008
   1009
   1010
(11 rows)
> set cluster setting sql.query_cache.enabled=true;
SET CLUSTER SETTING
> set cluster setting sql.auto_limit.quantity=default;
SET CLUSTER SETTING
> select time from test_ts.ts_table order by time;
            time
-----------------------------
  2023-05-31 10:00:00+00:00
  2023-05-31 10:00:00+00:00
  2023-05-31 10:00:00+00:00
  2023-05-31 10:00:00+00:00
  2023-05-31 10:00:00+00:00
  2023-05-31 10:00:00+00:00
  2023-05-31 10:00:00+00:00
  2023-05-31 10:00:00+00:00
  2023-05-31 10:00:00+00:00
  2023-05-31 10:00:00+00:00
  2023-05-31 10:00:00+00:00
  2023-05-31 10:00:00+00:00
  2023-05-31 10:00:00+00:00
  2023-05-31 10:00:00+00:00
  2023-05-31 10:00:00+00:00
  2023-05-31 10:00:00+00:00
  2023-05-31 11:00:00+00:00
  2023-05-31 11:00:00+00:00
  2023-05-31 11:00:00+00:00
  2023-05-31 11:00:00+00:00
  2023-05-31 11:00:00+00:00
  2023-05-31 11:00:00+00:00
  2023-05-31 11:00:00+00:00
  2023-05-31 11:00:00+00:00
  2023-05-31 11:00:00+00:00
  2023-05-31 11:00:00+00:00
  2023-05-31 11:00:00+00:00
  2023-05-31 11:00:00+00:00
  2023-05-31 11:00:00+00:00
  2023-05-31 11:00:00+00:00
  2023-05-31 11:00:00+00:00
  2023-05-31 11:00:00+00:00
(32 rows)
> set cluster setting sql.auto_limit.quantity=10;
SET CLUSTER SETTING
> select time from test_ts.ts_table order by time;
            time
-----------------------------
  2023-05-31 10:00:00+00:00
  2023-05-31 10:00:00+00:00
  2023-05-31 10:00:00+00:00
  2023-05-31 10:00:00+00:00
  2023-05-31 10:00:00+00:00
  2023-05-31 10:00:00+00:00
  2023-05-31 10:00:00+00:00
  2023-05-31 10:00:00+00:00
  2023-05-31 10:00:00+00:00
  2023-05-31 10:00:00+00:00
(10 rows)
> set cluster setting sql.auto_limit.quantity=20;
SET CLUSTER SETTING
> select time from test_ts.ts_table order by time;
            time
-----------------------------
  2023-05-31 10:00:00+00:00
  2023-05-31 10:00:00+00:00
  2023-05-31 10:00:00+00:00
  2023-05-31 10:00:00+00:00
  2023-05-31 10:00:00+00:00
  2023-05-31 10:00:00+00:00
  2023-05-31 10:00:00+00:00
  2023-05-31 10:00:00+00:00
  2023-05-31 10:00:00+00:00
  2023-05-31 10:00:00+00:00
  2023-05-31 10:00:00+00:00
  2023-05-31 10:00:00+00:00
  2023-05-31 10:00:00+00:00
  2023-05-31 10:00:00+00:00
  2023-05-31 10:00:00+00:00
  2023-05-31 10:00:00+00:00
  2023-05-31 11:00:00+00:00
  2023-05-31 11:00:00+00:00
  2023-05-31 11:00:00+00:00
  2023-05-31 11:00:00+00:00
(20 rows)
> use defaultdb;
SET
> set cluster setting sql.query_cache.enabled=default;
SET CLUSTER SETTING
> set cluster setting sql.auto_limit.quantity=default;
SET CLUSTER SETTING
> drop database test_ts cascade;
DROP DATABASE
> drop database test cascade;
DROP DATABASE
