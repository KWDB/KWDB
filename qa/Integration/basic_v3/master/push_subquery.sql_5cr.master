> CREATE TS DATABASE db_pipec;
CREATE TS DATABASE
> CREATE TABLE db_pipec.t_point (
k_timestamp timestamp NOT NULL,
measure_value double
) ATTRIBUTES (
point_sn varchar(64) NOT NULL,
sub_com_sn varchar(32),
work_area_sn varchar(16),
station_sn varchar(16),
pipeline_sn varchar(16) not null,
measure_type smallint,
measure_location varchar(64))
PRIMARY TAGS(point_sn)
ACTIVETIME 3h;
CREATE TABLE
> insert into db_pipec.t_point values('2024-08-27 11:00:00',10.5,'a','b','c','d','e',1,'f');
INSERT 1
> insert into db_pipec.t_point values('2024-08-27 12:00:00',11.5,'a1','b1','c1','d1','e1',1,'f1');
INSERT 1
> insert into db_pipec.t_point values('2024-08-27 10:00:00',12.5,'a2','b2','c2','d2','e2',2,'f2');
INSERT 1
> insert into db_pipec.t_point values('2024-08-26 10:00:00',13.5,'a3','b3','c3','d3','e3',2,'f3');
INSERT 1
> insert into db_pipec.t_point values('2024-08-28 10:00:00',14.5,'a4','b4','c4','d4','e4',3,'f4');
INSERT 1
> insert into db_pipec.t_point values('2024-08-29 10:00:00',15.5,'a5','b5','c5','d5','e5',3,'f5');
INSERT 1
> insert into db_pipec.t_point values('2024-08-28 11:00:00',10.5,'a6','b1','c1','d1','e1',4,'f1');
INSERT 1
> insert into db_pipec.t_point values('2024-08-28 12:00:00',11.5,'a7','b1','c1','d1','e1',4,'f1');
INSERT 1
> CREATE DATABASE pipec_r;
CREATE DATABASE
> CREATE TABLE pipec_r.station_info (
station_sn varchar(16) PRIMARY KEY,
station_name varchar(80),
work_area_sn varchar(16),
workarea_name varchar(80),
sub_company_sn varchar(32),
sub_company_name varchar(50));
CREATE TABLE
> CREATE INDEX station_sn_index ON pipec_r.station_info(work_area_sn);
CREATE INDEX
> CREATE INDEX station_name_index ON pipec_r.station_info(workarea_name);
CREATE INDEX
> insert into pipec_r.station_info values('d','dd','a','aa','b','bb');
INSERT 1
> insert into pipec_r.station_info values('d1','dd','a1','aa','b','bb');
INSERT 1
> insert into pipec_r.station_info values('d2','dd','a2','aa','b','bb');
INSERT 1
> insert into pipec_r.station_info values('d3','dd','a3','aa','b','bb');
INSERT 1
> insert into pipec_r.station_info values('d4','dd','a4','aa','b','bb');
INSERT 1
> insert into pipec_r.station_info values('d5','dd','a5','aa','b','bb');
INSERT 1
> CREATE TABLE pipec_r.pipeline_info (
pipeline_sn varchar(16) PRIMARY KEY,
pipeline_name varchar(60),
pipe_start varchar(80),
pipe_end varchar(80),
pipe_properties varchar(30));
CREATE TABLE
> CREATE INDEX pipeline_sn_index ON pipec_r.pipeline_info (pipeline_sn);
CREATE INDEX
> CREATE INDEX pipeline_name_index ON pipec_r.pipeline_info (pipeline_name);
CREATE INDEX
> insert into pipec_r.pipeline_info values('e','ee','a','aa','b');
INSERT 1
> insert into pipec_r.pipeline_info values('e1','ee','a','aa','b');
INSERT 1
> insert into pipec_r.pipeline_info values('e2','ee','a','aa','b');
INSERT 1
> insert into pipec_r.pipeline_info values('e3','ee','a','aa','b');
INSERT 1
> insert into pipec_r.pipeline_info values('e4','ee','a','aa','b');
INSERT 1
> insert into pipec_r.pipeline_info values('e5','ee','a','aa','b');
INSERT 1
> CREATE TABLE pipec_r.point_info (
point_sn varchar(64) PRIMARY KEY,
signal_code varchar(120),
signal_description varchar(200),
signal_type varchar(50),
station_sn varchar(16),
pipeline_sn varchar(16));
CREATE TABLE
> insert into pipec_r.point_info values('a','ee','a','aa','d','e');
INSERT 1
> insert into pipec_r.point_info values('a1','ee','a','aa','d','e');
INSERT 1
> insert into pipec_r.point_info values('a2','ee','a','aa','d','e');
INSERT 1
> insert into pipec_r.point_info values('a3','ee','a','aa','d','e');
INSERT 1
> insert into pipec_r.point_info values('a4','ee','a','aa','d','e');
INSERT 1
> insert into pipec_r.point_info values('a5','ee','a','aa','d','e');
INSERT 1
> SELECT
station_sn,
COUNT(DISTINCT point_sn) AS abnormal_point_count
FROM
db_pipec.t_point
WHERE
pipeline_sn = 'e1'
AND measure_type = 4
AND k_timestamp >= '2024-08-25 10:00:00'
AND k_timestamp <= '2024-08-30 10:00:00'
AND measure_value < 1* (
SELECT AVG(measure_value)
FROM db_pipec.t_point
WHERE pipeline_sn = 'e1'
AND measure_type = 4)
GROUP BY
station_sn
ORDER BY
abnormal_point_count DESC
LIMIT 1;
  station_sn | abnormal_point_count
-------------+-----------------------
  d1         |                    1
(1 row)
> explain SELECT
            station_sn,
            COUNT(DISTINCT point_sn) AS abnormal_point_count
        FROM
            db_pipec.t_point
        WHERE
                pipeline_sn = 'e1'
          AND measure_type = 4
          AND k_timestamp >= '2024-08-25 10:00:00'
          AND k_timestamp <= '2024-08-30 10:00:00'
          AND measure_value < 1* (
            SELECT AVG(measure_value)
            FROM db_pipec.t_point
            WHERE pipeline_sn = 'e1'
              AND measure_type = 4)
        GROUP BY
            station_sn
        ORDER BY
            abnormal_point_count DESC
            LIMIT 1;
                  tree                  |        field        |                                                        description
----------------------------------------+---------------------+----------------------------------------------------------------------------------------------------------------------------
                                        | distributed         | true
                                        | vectorized          | false
  root                                  |                     |
   ├── limit                            |                     |
   │    │                               | count               | 1
   │    └── sort                        |                     |
   │         │                          | order               | -abnormal_point_count
   │         └── group                  |                     |
   │              │                     | aggregate 0         | station_sn
   │              │                     | aggregate 1         | count(DISTINCT point_sn)
   │              │                     | group by            | station_sn
   │              └── render            |                     |
   │                   │                | engine type         | time series
   │                   │                | point_sn            | point_sn
   │                   │                | station_sn          | station_sn
   │                   └── synchronizer |                     |
   │                        └── ts scan |                     |
   │                                    | ts-table            | t_point
   │                                    | access mode         | tableTableMeta
   │                                    | filter              | ((k_timestamp >= '2024-08-25 10:00:00+00:00') AND (k_timestamp <= '2024-08-30 10:00:00+00:00')) AND (measure_value < @S1)
   │                                    | tag filter[0]       | measure_type = 4
   │                                    | tag filter[1]       | pipeline_sn = 'e1'
   └── subquery                         |                     |
        │                               | id                  | @S1
        │                               | original sql        | (SELECT avg(measure_value) FROM db_pipec.t_point WHERE (pipeline_sn = 'e1') AND (measure_type = 4))
        │                               | exec mode           | one row
        └── group                       |                     |
             │                          | engine type         | time series
             │                          | aggregate 0         | avg(measure_value)
             │                          | scalar              |
             │                          | pushLocalAggToScan  | true
             │                          | addSynchronizer     | true
             └── render                 |                     |
                  │                     | engine type         | time series
                  │                     | measure_value       | measure_value
                  └── ts scan           |                     |
                                        | ts-table            | t_point
                                        | access mode         | tableTableMeta
                                        | use statistic       | true
                                        | tag filter[0]       | measure_type = 4
                                        | tag filter[1]       | pipeline_sn = 'e1'
(41 rows)
> SELECT COUNT(*) AS max_sample_count,
AVG(t.measure_value) AS avg_value,
t.measure_value AS first_n_max_value
FROM db_pipec.t_point t
WHERE t.point_sn = (
SELECT t.point_sn AS point_sn
FROM db_pipec.t_point t
WHERE k_timestamp > '2024-01-01 00:00:00'
AND   k_timestamp < '2025-04-01 00:00:00'
AND  t.work_area_sn = 'c1'
GROUP BY t.point_sn
ORDER BY point_sn DESC
LIMIT 1
) AND t.work_area_sn = 'c1'
GROUP BY t.measure_value
ORDER BY t.measure_value DESC LIMIT 10;
  max_sample_count | avg_value | first_n_max_value
-------------------+-----------+--------------------
                 1 |      11.5 |              11.5
(1 row)
> explain SELECT COUNT(*) AS max_sample_count,
               AVG(t.measure_value) AS avg_value,
               t.measure_value AS first_n_max_value
        FROM db_pipec.t_point t
        WHERE t.point_sn = (
            SELECT t.point_sn AS point_sn
            FROM db_pipec.t_point t
            WHERE k_timestamp > '2024-01-01 00:00:00'
              AND   k_timestamp < '2025-04-01 00:00:00'
              AND  t.work_area_sn = 'c1'
            GROUP BY t.point_sn
            ORDER BY COUNT(*) DESC
            LIMIT 1
            ) AND t.work_area_sn = 'c1'
        GROUP BY t.measure_value
        ORDER BY t.measure_value DESC LIMIT 10;
                     tree                    |       field       |                                                                                                            description
---------------------------------------------+-------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                             | distributed       | true
                                             | vectorized        | false
  root                                       |                   |
   ├── render                                |                   |
   │    │                                    | engine type       | time series
   │    │                                    | max_sample_count  | count_rows
   │    │                                    | avg_value         | avg
   │    │                                    | first_n_max_value | measure_value
   │    └── limit                            |                   |
   │         │                               | engine type       | time series
   │         │                               | count             | 10
   │         └── sort                        |                   |
   │              │                          | order             | -measure_value
   │              └── group                  |                   |
   │                   │                     | engine type       | time series
   │                   │                     | aggregate 0       | measure_value
   │                   │                     | aggregate 1       | count_rows()
   │                   │                     | aggregate 2       | avg(measure_value)
   │                   │                     | group by          | measure_value
   │                   │                     | addSynchronizer   | true
   │                   └── render            |                   |
   │                        │                | engine type       | time series
   │                        │                | measure_value     | measure_value
   │                        └── ts scan      |                   |
   │                                         | ts-table          | t_point
   │                                         | access mode       | tableTableMeta
   │                                         | tag filter[0]     | work_area_sn = 'c1'
   │                                         | tag filter[1]     | point_sn = @S1
   └── subquery                              |                   |
        │                                    | id                | @S1
        │                                    | original sql      | (SELECT t.point_sn AS point_sn FROM db_pipec.t_point AS t WHERE ((k_timestamp > '2024-01-01 00:00:00') AND (k_timestamp < '2025-04-01 00:00:00')) AND (t.work_area_sn = 'c1') GROUP BY t.point_sn ORDER BY count(*) DESC LIMIT 1)
        │                                    | exec mode         | one row
        └── render                           |                   |
             │                               | engine type       | time series
             │                               | point_sn          | point_sn
             └── limit                       |                   |
                  │                          | engine type       | time series
                  │                          | count             | 1
                  └── sort                   |                   |
                       │                     | order             | -count_rows
                       └── group             |                   |
                            │                | engine type       | time series
                            │                | aggregate 0       | point_sn
                            │                | aggregate 1       | count_rows()
                            │                | group by          | point_sn
                            │                | addSynchronizer   | true
                            └── render       |                   |
                                 │           | engine type       | time series
                                 │           | point_sn          | point_sn
                                 └── ts scan |                   |
                                             | ts-table          | t_point
                                             | access mode       | tableTableMeta
                                             | spans:fromTime    | 2024-01-01 00:00:00.001 +0000 UTC
                                             | spans:toTime      | 2025-03-31 23:59:59.999 +0000 UTC
                                             | tag filter[0]     | work_area_sn = 'c1'
(55 rows)
> select measure_value, point_sn,point_sn in (select max(point_sn) from db_pipec.t_point ) from db_pipec.t_point order by point_sn;
  measure_value | point_sn | ?column?
----------------+----------+-----------
           10.5 | a        |  false
           11.5 | a1       |  false
           12.5 | a2       |  false
           13.5 | a3       |  false
           14.5 | a4       |  false
           15.5 | a5       |  false
           10.5 | a6       |  false
           11.5 | a7       |   true
(8 rows)
> explain select measure_value, point_sn,point_sn in (select max(point_sn) from db_pipec.t_point ) from db_pipec.t_point order by point_sn;
                tree               |        field        |                         description
-----------------------------------+---------------------+--------------------------------------------------------------
                                   | distributed         | true
                                   | vectorized          | false
  root                             |                     |
   ├── render                      |                     |
   │    │                          | measure_value       | measure_value
   │    │                          | point_sn            | point_sn
   │    │                          | ?column?            | "?column?"
   │    └── sort                   |                     |
   │         │                     | order               | +point_sn
   │         └── synchronizer      |                     |
   │              └── render       |                     |
   │                   │           | engine type         | time series
   │                   │           | ?column?            | point_sn = ANY (SELECT max(point_sn) FROM db_pipec.t_point)
   │                   │           | measure_value       | measure_value
   │                   │           | point_sn            | point_sn
   │                   └── ts scan |                     |
   │                               | ts-table            | t_point
   │                               | access mode         | tableTableMeta
   └── subquery                    |                     |
        │                          | id                  | @S1
        │                          | original sql        | (SELECT max(point_sn) FROM db_pipec.t_point)
        │                          | exec mode           | all rows normalized
        └── group                  |                     |
             │                     | engine type         | time series
             │                     | aggregate 0         | max(point_sn)
             │                     | scalar              |
             │                     | pushLocalAggToScan  | true
             │                     | addSynchronizer     | true
             └── ts scan           |                     |
                                   | ts-table            | t_point
                                   | access mode         | tableTableMeta
                                   | use statistic       | true
(32 rows)
> select measure_value, point_sn, exists (select max(point_sn) from db_pipec.t_point ) from db_pipec.t_point order by point_sn;
  measure_value | point_sn | exists
----------------+----------+---------
           10.5 | a        |  true
           11.5 | a1       |  true
           12.5 | a2       |  true
           13.5 | a3       |  true
           14.5 | a4       |  true
           15.5 | a5       |  true
           10.5 | a6       |  true
           11.5 | a7       |  true
(8 rows)
> explain select measure_value, point_sn, exists (select max(point_sn) from db_pipec.t_point ) from db_pipec.t_point order by point_sn;
                tree               |        field        |                     description
-----------------------------------+---------------------+------------------------------------------------------
                                   | distributed         | true
                                   | vectorized          | false
  root                             |                     |
   ├── render                      |                     |
   │    │                          | measure_value       | measure_value
   │    │                          | point_sn            | point_sn
   │    │                          | exists              | "exists"
   │    └── sort                   |                     |
   │         │                     | order               | +point_sn
   │         └── synchronizer      |                     |
   │              └── render       |                     |
   │                   │           | engine type         | time series
   │                   │           | exists              | EXISTS (SELECT max(point_sn) FROM db_pipec.t_point)
   │                   │           | measure_value       | measure_value
   │                   │           | point_sn            | point_sn
   │                   └── ts scan |                     |
   │                               | ts-table            | t_point
   │                               | access mode         | tableTableMeta
   └── subquery                    |                     |
        │                          | id                  | @S1
        │                          | original sql        | EXISTS (SELECT max(point_sn) FROM db_pipec.t_point)
        │                          | exec mode           | exists
        └── group                  |                     |
             │                     | engine type         | time series
             │                     | aggregate 0         | max(point_sn)
             │                     | scalar              |
             │                     | pushLocalAggToScan  | true
             │                     | addSynchronizer     | true
             └── ts scan           |                     |
                                   | ts-table            | t_point
                                   | access mode         | tableTableMeta
                                   | use statistic       | true
(32 rows)
> select measure_value, point_sn, (select max(point_sn) from db_pipec.t_point ) from db_pipec.t_point order by point_sn;
  measure_value | point_sn | max
----------------+----------+------
           10.5 | a        | a7
           11.5 | a1       | a7
           12.5 | a2       | a7
           13.5 | a3       | a7
           14.5 | a4       | a7
           15.5 | a5       | a7
           10.5 | a6       | a7
           11.5 | a7       | a7
(8 rows)
> explain select measure_value, point_sn,  (select max(point_sn) from db_pipec.t_point ) from db_pipec.t_point order by point_sn;
                tree               |        field        |                 description
-----------------------------------+---------------------+-----------------------------------------------
                                   | distributed         | true
                                   | vectorized          | false
  root                             |                     |
   ├── render                      |                     |
   │    │                          | measure_value       | measure_value
   │    │                          | point_sn            | point_sn
   │    │                          | max                 | max
   │    └── sort                   |                     |
   │         │                     | order               | +point_sn
   │         └── synchronizer      |                     |
   │              └── render       |                     |
   │                   │           | engine type         | time series
   │                   │           | max                 | (SELECT max(point_sn) FROM db_pipec.t_point)
   │                   │           | measure_value       | measure_value
   │                   │           | point_sn            | point_sn
   │                   └── ts scan |                     |
   │                               | ts-table            | t_point
   │                               | access mode         | tableTableMeta
   └── subquery                    |                     |
        │                          | id                  | @S1
        │                          | original sql        | (SELECT max(point_sn) FROM db_pipec.t_point)
        │                          | exec mode           | one row
        └── group                  |                     |
             │                     | engine type         | time series
             │                     | aggregate 0         | max(point_sn)
             │                     | scalar              |
             │                     | pushLocalAggToScan  | true
             │                     | addSynchronizer     | true
             └── ts scan           |                     |
                                   | ts-table            | t_point
                                   | access mode         | tableTableMeta
                                   | use statistic       | true
(32 rows)
> select measure_value,point_sn, array (select point_sn from db_pipec.t_point order by point_sn) from db_pipec.t_point order by point_sn;
  measure_value | point_sn |          array
----------------+----------+---------------------------
           10.5 | a        | {a,a1,a2,a3,a4,a5,a6,a7}
           11.5 | a1       | {a,a1,a2,a3,a4,a5,a6,a7}
           12.5 | a2       | {a,a1,a2,a3,a4,a5,a6,a7}
           13.5 | a3       | {a,a1,a2,a3,a4,a5,a6,a7}
           14.5 | a4       | {a,a1,a2,a3,a4,a5,a6,a7}
           15.5 | a5       | {a,a1,a2,a3,a4,a5,a6,a7}
           10.5 | a6       | {a,a1,a2,a3,a4,a5,a6,a7}
           11.5 | a7       | {a,a1,a2,a3,a4,a5,a6,a7}
(8 rows)
> explain select measure_value,point_sn, array (select point_sn from db_pipec.t_point order by point_sn) from db_pipec.t_point order by point_sn;
                tree               |     field     |                           description
-----------------------------------+---------------+------------------------------------------------------------------
                                   | distributed   | true
                                   | vectorized    | false
  root                             |               |
   ├── render                      |               |
   │    │                          | measure_value | measure_value
   │    │                          | point_sn      | point_sn
   │    │                          | array         | "array"
   │    └── sort                   |               |
   │         │                     | order         | +point_sn
   │         └── render            |               |
   │              │                | array         | ARRAY (SELECT point_sn FROM db_pipec.t_point ORDER BY point_sn)
   │              │                | measure_value | measure_value
   │              │                | point_sn      | point_sn
   │              └── synchronizer |               |
   │                   └── ts scan |               |
   │                               | ts-table      | t_point
   │                               | access mode   | tableTableMeta
   └── subquery                    |               |
        │                          | id            | @S1
        │                          | original sql  | (SELECT point_sn FROM db_pipec.t_point ORDER BY point_sn)
        │                          | exec mode     | all rows
        └── sort                   |               |
             │                     | order         | +point_sn
             └── synchronizer      |               |
                  └── ts scan      |               |
                                   | ts-table      | t_point
                                   | access mode   | tableTableMeta
(27 rows)
> select measure_value, point_sn from db_pipec.t_point where point_sn = (select max(point_sn) from db_pipec.t_point) order by point_sn;
  measure_value | point_sn
----------------+-----------
           11.5 | a7
(1 row)
> explain select measure_value, point_sn from db_pipec.t_point where point_sn = (select max(point_sn) from db_pipec.t_point) order by point_sn;
           tree          |        field        |                 description
-------------------------+---------------------+-----------------------------------------------
                         | distributed         | true
                         | vectorized          | false
  root                   |                     |
   ├── sort              |                     |
   │    │                | order               | +point_sn
   │    └── synchronizer |                     |
   │         └── ts scan |                     |
   │                     | ts-table            | t_point
   │                     | access mode         | tableTableMeta
   │                     | tag filter[0]       | point_sn = @S1
   └── subquery          |                     |
        │                | id                  | @S1
        │                | original sql        | (SELECT max(point_sn) FROM db_pipec.t_point)
        │                | exec mode           | one row
        └── group        |                     |
             │           | engine type         | time series
             │           | aggregate 0         | max(point_sn)
             │           | scalar              |
             │           | pushLocalAggToScan  | true
             │           | addSynchronizer     | true
             └── ts scan |                     |
                         | ts-table            | t_point
                         | access mode         | tableTableMeta
                         | use statistic       | true
(24 rows)
> select measure_value, point_sn from db_pipec.t_point where  exists (select max(point_sn) from db_pipec.t_point) order by point_sn;
  measure_value | point_sn
----------------+-----------
           10.5 | a
           11.5 | a1
           12.5 | a2
           13.5 | a3
           14.5 | a4
           15.5 | a5
           10.5 | a6
           11.5 | a7
(8 rows)
> explain select measure_value, point_sn from db_pipec.t_point where  exists (select max(point_sn) from db_pipec.t_point) order by point_sn;
           tree          |        field        |                     description
-------------------------+---------------------+------------------------------------------------------
                         | distributed         | true
                         | vectorized          | false
  root                   |                     |
   ├── sort              |                     |
   │    │                | order               | +point_sn
   │    └── synchronizer |                     |
   │         └── ts scan |                     |
   │                     | ts-table            | t_point
   │                     | access mode         | tableTableMeta
   │                     | filter              | @S1
   └── subquery          |                     |
        │                | id                  | @S1
        │                | original sql        | EXISTS (SELECT max(point_sn) FROM db_pipec.t_point)
        │                | exec mode           | exists
        └── group        |                     |
             │           | engine type         | time series
             │           | aggregate 0         | max(point_sn)
             │           | scalar              |
             │           | pushLocalAggToScan  | true
             │           | addSynchronizer     | true
             └── ts scan |                     |
                         | ts-table            | t_point
                         | access mode         | tableTableMeta
                         | use statistic       | true
(24 rows)
> select measure_value, t.point_sn from db_pipec.t_point t, pipec_r.point_info p where t.point_sn = (select max(point_sn) from pipec_r.point_info) order by point_sn;
  measure_value | point_sn
----------------+-----------
           15.5 | a5
           15.5 | a5
           15.5 | a5
           15.5 | a5
           15.5 | a5
           15.5 | a5
(6 rows)
> explain select measure_value, t.point_sn from db_pipec.t_point t, pipec_r.point_info p where t.point_sn = (select max(point_sn) from pipec_r.point_info) order by point_sn;
             tree             |     field     |                  description
------------------------------+---------------+-------------------------------------------------
                              | distributed   | true
                              | vectorized    | false
  root                        |               |
   ├── sort                   |               |
   │    │                     | order         | +point_sn
   │    └── cross-join        |               |
   │         │                | type          | cross
   │         ├── synchronizer |               |
   │         │    └── ts scan |               |
   │         │                | ts-table      | t_point
   │         │                | access mode   | tableTableMeta
   │         │                | tag filter[0] | point_sn = @S1
   │         └── scan         |               |
   │                          | table         | point_info@primary
   │                          | spans         | FULL SCAN
   └── subquery               |               |
        │                     | id            | @S1
        │                     | original sql  | (SELECT max(point_sn) FROM pipec_r.point_info)
        │                     | exec mode     | one row
        └── group             |               |
             │                | aggregate 0   | any_not_null(point_sn)
             │                | scalar        |
             └── revscan      |               |
                              | table         | point_info@primary
                              | spans         | LIMITED SCAN
                              | limit         | 1
(26 rows)
> select max(measure_value), min(t.point_sn) from db_pipec.t_point t  group by  t.point_sn having (select max(point_sn) from pipec_r.point_info)>'a' order by point_sn;
  max  | min
-------+------
  10.5 | a
  11.5 | a1
  12.5 | a2
  13.5 | a3
  14.5 | a4
  15.5 | a5
  10.5 | a6
  11.5 | a7
(8 rows)
> explain select max(measure_value), min(t.point_sn) from db_pipec.t_point t  group by  t.point_sn having (select max(point_sn) from pipec_r.point_info)>'a' order by point_sn;
             tree             |      field       |                  description
------------------------------+------------------+-------------------------------------------------
                              | distributed      | true
                              | vectorized       | false
  root                        |                  |
   ├── render                 |                  |
   │    │                     | max              | max
   │    │                     | min              | min
   │    └── sort              |                  |
   │         │                | order            | +point_sn
   │         └── group        |                  |
   │              │           | engine type      | time series
   │              │           | aggregate 0      | point_sn
   │              │           | aggregate 1      | max(measure_value)
   │              │           | aggregate 2      | min(point_sn)
   │              │           | group by         | point_sn
   │              │           | addSynchronizer  | true
   │              └── ts scan |                  |
   │                          | ts-table         | t_point
   │                          | access mode      | tableTableMeta
   │                          | filter           | @S1 > 'a'
   └── subquery               |                  |
        │                     | id               | @S1
        │                     | original sql     | (SELECT max(point_sn) FROM pipec_r.point_info)
        │                     | exec mode        | one row
        └── group             |                  |
             │                | aggregate 0      | any_not_null(point_sn)
             │                | scalar           |
             └── revscan      |                  |
                              | table            | point_info@primary
                              | spans            | LIMITED SCAN
                              | limit            | 1
(30 rows)
> select max(measure_value), min(t.point_sn) from db_pipec.t_point t  group by  (select max(point_sn) from pipec_r.point_info);
  max  | min
-------+------
  15.5 | a
(1 row)
> explain select max(measure_value), min(t.point_sn) from db_pipec.t_point t  group by  (select max(point_sn) from pipec_r.point_info);
      tree     |        field        |    description
---------------+---------------------+---------------------
               | distributed         | true
               | vectorized          | false
  group        |                     |
   │           | engine type         | time series
   │           | aggregate 0         | max(measure_value)
   │           | aggregate 1         | min(point_sn)
   │           | pushLocalAggToScan  | true
   │           | addSynchronizer     | true
   └── ts scan |                     |
               | ts-table            | t_point
               | access mode         | tableTableMeta
               | use statistic       | true
(12 rows)
> select max(measure_value), min(t.point_sn) from db_pipec.t_point t  group by  (select max(point_sn) from pipec_r.point_info) order by (select max(point_sn) from pipec_r.point_info);
  max  | min
-------+------
  15.5 | a
(1 row)
> explain select max(measure_value), min(t.point_sn) from db_pipec.t_point t  group by  (select max(point_sn) from pipec_r.point_info) order by (select max(point_sn) from pipec_r.point_info);
      tree     |        field        |    description
---------------+---------------------+---------------------
               | distributed         | true
               | vectorized          | false
  group        |                     |
   │           | engine type         | time series
   │           | aggregate 0         | max(measure_value)
   │           | aggregate 1         | min(point_sn)
   │           | pushLocalAggToScan  | true
   │           | addSynchronizer     | true
   └── ts scan |                     |
               | ts-table            | t_point
               | access mode         | tableTableMeta
               | use statistic       | true
(12 rows)
> drop database pipec_r cascade;
DROP DATABASE
> drop database db_pipec cascade;
DROP DATABASE
> CREATE TS DATABASE tsdb;
CREATE TS DATABASE
> CREATE TABLE tsdb.transformersuper (
                                       ts TIMESTAMPTZ NOT NULL,
                                       current FLOAT8 NULL,
                                       voltage FLOAT8 NULL,
                                       frequency FLOAT8 NULL,
                                       temperature FLOAT8 NULL
) TAGS (
    deviceid INT4 NOT NULL,
    modelid INT4 NOT NULL ) PRIMARY TAGS(deviceid, modelid);
CREATE TABLE
> CREATE DATABASE rdb;
CREATE DATABASE
> CREATE TABLE rdb.devicemodel (
                                 modelid INT4 NOT NULL,
                                 typeid INT4 NULL,
                                 modelname VARCHAR(100) NULL,
                                 typename VARCHAR(100) NULL
);
CREATE TABLE
> SELECT ts FROM tsdb.transformersuper WHERE modelid = (SELECT max(modelid) FROM rdb.devicemodel);
  ts
------
(0 rows)
> explain SELECT ts FROM tsdb.transformersuper WHERE modelid = (SELECT max(modelid) FROM rdb.devicemodel);
           tree          |     field     |                description
-------------------------+---------------+---------------------------------------------
                         | distributed   | true
                         | vectorized    | false
  root                   |               |
   ├── synchronizer      |               |
   │    └── render       |               |
   │         │           | engine type   | time series
   │         │           | ts            | ts
   │         └── ts scan |               |
   │                     | ts-table      | transformersuper
   │                     | access mode   | tableTableMeta
   │                     | tag filter[0] | modelid = @S1
   └── subquery          |               |
        │                | id            | @S1
        │                | original sql  | (SELECT max(modelid) FROM rdb.devicemodel)
        │                | exec mode     | one row
        └── group        |               |
             │           | aggregate 0   | max(modelid)
             │           | scalar        |
             └── scan    |               |
                         | table         | devicemodel@primary
                         | spans         | FULL SCAN
(21 rows)
> SELECT ts FROM tsdb.transformersuper WHERE modelid = (SELECT max(modelid) FROM rdb.devicemodel) and deviceid = (SELECT max(modelid) FROM rdb.devicemodel);
  ts
------
(0 rows)
> explain SELECT ts FROM tsdb.transformersuper WHERE modelid = (SELECT max(modelid) FROM rdb.devicemodel) and deviceid = (SELECT max(modelid) FROM rdb.devicemodel);
           tree          |     field     |                description
-------------------------+---------------+---------------------------------------------
                         | distributed   | true
                         | vectorized    | false
  root                   |               |
   ├── synchronizer      |               |
   │    └── render       |               |
   │         │           | engine type   | time series
   │         │           | ts            | ts
   │         └── ts scan |               |
   │                     | ts-table      | transformersuper
   │                     | access mode   | tableTableMeta
   │                     | tag filter[0] | modelid = @S1
   │                     | tag filter[1] | deviceid = @S2
   ├── subquery          |               |
   │    │                | id            | @S1
   │    │                | original sql  | (SELECT max(modelid) FROM rdb.devicemodel)
   │    │                | exec mode     | one row
   │    └── group        |               |
   │         │           | aggregate 0   | max(modelid)
   │         │           | scalar        |
   │         └── scan    |               |
   │                     | table         | devicemodel@primary
   │                     | spans         | FULL SCAN
   └── subquery          |               |
        │                | id            | @S2
        │                | original sql  | (SELECT max(modelid) FROM rdb.devicemodel)
        │                | exec mode     | one row
        └── group        |               |
             │           | aggregate 0   | max(modelid)
             │           | scalar        |
             └── scan    |               |
                         | table         | devicemodel@primary
                         | spans         | FULL SCAN
(32 rows)
> drop database tsdb cascade;
DROP DATABASE
> drop database rdb cascade;
DROP DATABASE
