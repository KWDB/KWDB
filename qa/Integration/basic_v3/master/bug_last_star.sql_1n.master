> drop database if exists last_star cascade;
DROP DATABASE
> create ts database last_star;
CREATE TS DATABASE
> use last_star;
SET
> create table t1 (ts timestamp not null, e1 int, e2 varchar, e3 bool) tags (tag1 int not null) primary tags (tag1);
CREATE TABLE
> insert into t1 values ('2024-04-01 00:00:00.000', 1, 'abc', true, 10);
INSERT 1
> select last(*) from t1;
          last(ts)          | last(e1) | last(e2) | last(e3) | last(tag1)
----------------------------+----------+----------+----------+-------------
  2024-04-01 00:00:00+00:00 |        1 | abc      |   true   |         10
(1 row)
> select last(*) from t1 where e1 is not null;
          last(ts)          | last(e1) | last(e2) | last(e3) | last(tag1)
----------------------------+----------+----------+----------+-------------
  2024-04-01 00:00:00+00:00 |        1 | abc      |   true   |         10
(1 row)
> explain select last(*) from t1 where e1 is not null;
        tree        |      field       |  description
--------------------+------------------+-----------------
                    | distributed      | true
                    | vectorized       | false
  group             |                  |
   │                | engine type      | time series
   │                | aggregate 0      | last(ts, ts)
   │                | aggregate 1      | last(e1, ts)
   │                | aggregate 2      | last(e2, ts)
   │                | aggregate 3      | last(e3, ts)
   │                | aggregate 4      | last(tag1, ts)
   │                | scalar           |
   │                | addSynchronizer  | true
   └── render       |                  |
        │           | engine type      | time series
        │           | ts               | ts
        │           | e1               | e1
        │           | e2               | e2
        │           | e3               | e3
        │           | tag1             | tag1
        └── ts scan |                  |
                    | ts-table         | t1
                    | access mode      | tableTableMeta
                    | filter           | e1 IS NOT NULL
                    | block filter[e1] | NOT NULL
(23 rows)
> alter table t1 drop column e2;
ALTER TABLE
> alter table t1 add column e2 varchar;
ALTER TABLE
> select last(*) from t1;
          last(ts)          | last(e1) | last(e3) | last(e2) | last(tag1)
----------------------------+----------+----------+----------+-------------
  2024-04-01 00:00:00+00:00 |        1 |   true   | NULL     |         10
(1 row)
> select last(*) from t1 where e1 is not null;
          last(ts)          | last(e1) | last(e3) | last(e2) | last(tag1)
----------------------------+----------+----------+----------+-------------
  2024-04-01 00:00:00+00:00 |        1 |   true   | NULL     |         10
(1 row)
> select last(t1.*) from t1;
          last(ts)          | last(e1) | last(e3) | last(e2) | last(tag1)
----------------------------+----------+----------+----------+-------------
  2024-04-01 00:00:00+00:00 |        1 |   true   | NULL     |         10
(1 row)
> select last(t1.*) from t1 where e1 is not null;
          last(ts)          | last(e1) | last(e3) | last(e2) | last(tag1)
----------------------------+----------+----------+----------+-------------
  2024-04-01 00:00:00+00:00 |        1 |   true   | NULL     |         10
(1 row)
> explain select last(t1.*) from t1 where e1 is not null;
        tree        |      field       |  description
--------------------+------------------+-----------------
                    | distributed      | true
                    | vectorized       | false
  group             |                  |
   │                | engine type      | time series
   │                | aggregate 0      | last(ts, ts)
   │                | aggregate 1      | last(e1, ts)
   │                | aggregate 2      | last(e3, ts)
   │                | aggregate 3      | last(e2, ts)
   │                | aggregate 4      | last(tag1, ts)
   │                | scalar           |
   │                | addSynchronizer  | true
   └── render       |                  |
        │           | engine type      | time series
        │           | ts               | ts
        │           | e1               | e1
        │           | e3               | e3
        │           | tag1             | tag1
        │           | e2               | e2
        └── ts scan |                  |
                    | ts-table         | t1
                    | access mode      | tableTableMeta
                    | filter           | e1 IS NOT NULL
                    | block filter[e1] | NOT NULL
(23 rows)
> drop database if exists last_star cascade;
DROP DATABASE
