> create ts database d1;
CREATE TS DATABASE
> use d1;
SET
> create table t_ok (ts timestamp not null, a int not null) tags (loc varchar(20) not null) primary tags(loc);
CREATE TABLE
> insert into t_ok values ('2020-1-1 12:00:00.000',1, 'p1');
INSERT 1
> update t_ok set a=2 where 1=1;
ERROR: unsupported conditions in update: unsupported binary operator or mismatching tag filter
SQLSTATE: 0A000
> upsert into t_ok values ('2020-1-1 12:00:00.000',2);
ERROR: on conflict is not supported in timeseries table
SQLSTATE: 0A000
> create view t_view as select * from t_ok;
ERROR: create view is not supported in timeseries table
SQLSTATE: 0A000
> create temp table t_temp(k_timestamp timestamp not null,e1 int2 not null)attributes(e2 int not null) primary tags(e2);
ERROR: temporary is not supported in timeseries table
SQLSTATE: 0A000
> create table t_check(k_timestamp timestamp not null,e22 varbytes(254) check (length(e22)<100)) ATTRIBUTES (code1 int2 not null) primary tags(code1);
ERROR: check constraint is not supported in timeseries table
SQLSTATE: 0A000
> CREATE ts DATABASE d_lifetime RETENTIONS 100000000000000 YEAR;
ERROR: retention 100000000000000year is out of range
SQLSTATE: 22023
> ALTER ts DATABASE d1 set RETENTIONS = 10000year;
ERROR: lifetime is out of range: 315360000000
SQLSTATE: 22023
> CREATE ts DATABASE d_ok RETENTIONS 10 DAY;
CREATE TS DATABASE
> SELECT RETENTIONS from d_ok.information_schema.schemata where schema_name='public';
  retentions
--------------
      864000
(1 row)
> ALTER  ts DATABASE d_ok set RETENTIONS = 100year;
ALTER TS DATABASE
> SELECT RETENTIONS from d_ok.information_schema.schemata where schema_name='public';
  retentions
--------------
  3153600000
(1 row)
> use defaultdb;
SET
> drop database d1 cascade;
DROP DATABASE
> drop database d_ok;
DROP DATABASE
> create ts database d_error;
CREATE TS DATABASE
> use d_error;
SET
> create table t (ts timestamp not null, a int not null) tags (loc varchar(20) not null) primary tags(loc);
CREATE TABLE
> insert into t values ('2020-1-1 12:00:00.000',1, 'p1');
INSERT 1
> SHOW PARTITIONS from database d_error;
ERROR: show partitions is not supported in timeseries table
SQLSTATE: 0A000
> SHOW RANGES from database d_error;
ERROR: show ranges is not supported in timeseries table
SQLSTATE: 0A000
> SHOW INDEXES FROM DATABASE d_error;
ERROR: show database indexes is not supported in timeseries table
SQLSTATE: 0A000
> SHOW keys FROM DATABASE d_error;
ERROR: show database indexes is not supported in timeseries table
SQLSTATE: 0A000
> SHOW ZONE CONFIGURATION FOR DATABASE d_error;
     target     |              raw_config_sql
----------------+-------------------------------------------
  RANGE default | ALTER RANGE default CONFIGURE ZONE USING
                |     range_min_bytes = 134217728,
                |     range_max_bytes = 536870912,
                |     gc.ttlseconds = 60,
                |     num_replicas = 1,
                |     ts_merge.days = 240h0m0s,
                |     constraints = '[]',
                |     lease_preferences = '[]'
(1 row)
> drop database d_error;
DROP DATABASE
> create database db_test1;
CREATE DATABASE
> use db_test1;
SET
> create schema db1sch1;
CREATE SCHEMA
> set search_path=db1sch1;
SET
> CREATE TABLE test1constraints (id INT PRIMARY KEY,date TIMESTAMP NOT NULL,priority INT DEFAULT 1,customer_id INT UNIQUE,status STRING DEFAULT 'open',CHECK (priority BETWEEN 1 AND 5),CHECK (status in ('open', 'in progress', 'done', 'cancelled')),FAMILY (id, date, priority, customer_id, status));
CREATE TABLE
> SHOW CONSTRAINTS FROM test1constraints;
     table_name    |         constraint_name          | constraint_type |                                               details                                                | validated
-------------------+----------------------------------+-----------------+------------------------------------------------------------------------------------------------------+------------
  test1constraints | check_priority                   | CHECK           | CHECK ((priority BETWEEN 1 AND 5))                                                                   |   true
  test1constraints | check_status                     | CHECK           | CHECK ((status IN ('open':::STRING, 'in progress':::STRING, 'done':::STRING, 'cancelled':::STRING))) |   true
  test1constraints | primary                          | PRIMARY KEY     | PRIMARY KEY (id ASC)                                                                                 |   true
  test1constraints | test1constraints_customer_id_key | UNIQUE          | UNIQUE (customer_id ASC)                                                                             |   true
(4 rows)
> CREATE TABLE test1index (a int PRIMARY KEY);
CREATE TABLE
> SHOW INDEXES FROM test1index;
  table_name | index_name | non_unique | seq_in_index | column_name | direction | storing | implicit
-------------+------------+------------+--------------+-------------+-----------+---------+-----------
  test1index | primary    |   false    |            1 | a           | ASC       |  false  |  false
(1 row)
> CREATE TABLE test1partition (a int) PARTITION BY NOTHING;
CREATE TABLE
> SHOW PARTITIONS FROM TABLE test1partition;
  database_name | table_name | partition_name | parent_partition | column_names | index_name | partition_value | zone_config | full_zone_config
----------------+------------+----------------+------------------+--------------+------------+-----------------+-------------+-------------------
(0 rows)
> use defaultdb;
SET
> drop database db_test1 cascade;
DROP DATABASE
> create ts database db1;
CREATE TS DATABASE
> use db1;
SET
> CREATE TABLE t1 (
                    k_timestamp TIMESTAMPTZ NOT NULL,
                    value VARCHAR(254) NOT NULL
) TAGS (
id INT8 NOT NULL,
location VARCHAR(1024) NOT NULL ) PRIMARY TAGS(id);
CREATE TABLE
> ALTER TABLE db1.t1 ADD column1 varchar NULL;
ALTER TABLE
> ALTER TABLE db1.t1 ALTER COLUMN column1 SET NOT NULL;
ERROR: can not modify an existing column on ts table "t1"
SQLSTATE: 42809
> ALTER TABLE db1.t1 ALTER COLUMN column1 DROP NOT NULL;
ERROR: can not modify an existing column on ts table "t1"
SQLSTATE: 42809
> ALTER TABLE db1.t1 ALTER COLUMN column1 SET DEFAULT 'a';
ALTER TABLE
> ALTER TABLE db1.t1 ALTER COLUMN column1 DROP STORED;
ERROR: can not modify an existing column on ts table "t1"
SQLSTATE: 42809
> select * from  t1;
  k_timestamp | value | column1 | id | location
--------------+-------+---------+----+-----------
(0 rows)
> DROP TABLE t1;
DROP TABLE
> DROP DATABASE db1 cascade;
DROP DATABASE
> drop database if exists tsdb cascade;
DROP DATABASE
> create ts database tsdb;
CREATE TS DATABASE
> create table tsdb.t1(a timestamptz not null,e1 nchar)tags(c int not null)primary tags(c);
CREATE TABLE
> insert into tsdb.t1 values(now(),s,1);
ERROR: unsupported input type relation "s" (column e1)
SQLSTATE: 42601
> drop database if exists tsdb cascade;
DROP DATABASE
