# LogicTest: local

query T colnames
SELECT * FROM [SHOW client_encoding]
----
client_encoding
utf8

query T colnames
SELECT c.x FROM [SHOW client_encoding] AS c(x)
----
x
utf8

query TI colnames
SELECT * FROM [SHOW client_encoding] WITH ORDINALITY
----
client_encoding     ordinality
utf8                1

# We filter here because optimizer will be different depending on which
# configuration this logic test is running in, and session ID will vary.
query TT colnames
SELECT *
FROM [SHOW ALL]
WHERE variable != 'optimizer' AND variable != 'kwdb_version' AND variable != 'session_id'
----
variable                                  value
application_name                          ·
avoid_buffering                           off
bytea_output                              hex
client_encoding                           utf8
client_min_messages                       notice
database                                  test
datestyle                                 ISO, MDY
default_int_size                          8
default_tablespace                        ·
default_transaction_isolation             serializable
default_transaction_read_only             off
distsql                                   off
enable_implicit_select_for_update         on
enable_insert_fast_path                   on
enable_multimodel                         off
enable_zigzag_join                        on
experimental_enable_hash_sharded_indexes  off
experimental_enable_temp_tables           off
experimental_serial_normalization         rowid
extra_float_digits                        0
force_savepoint_restart                   off
hash_scan_mode                            0
idle_in_session_timeout                   0
idle_in_transaction_session_timeout       0
inside_out_row_ratio                      0.9
integer_datetimes                         on
intervalstyle                             postgres
locality                                  region=test,dc=dc1
lock_timeout                              0
max_identifier_length                     128
max_index_keys                            32
multi_model_reorder_joins_limit           8
need_control_inside_out                   off
node_id                                   1
optimizer_foreign_keys                    on
reorder_joins_limit                       4
require_explicit_primary_keys             off
results_buffer_size                       16384
row_security                              off
search_path                               public
server_encoding                           UTF8
server_version                            9.5.0
server_version_num                        90500
session_user                              root
sql_safe_updates                          off
standard_conforming_strings               on
statement_timeout                         0
synchronize_seqscans                      on
timezone                                  UTC
tracing                                   off
transaction_isolation                     serializable
transaction_priority                      normal
transaction_read_only                     off
transaction_status                        NoTxn
ts_ignore_batcherror                      off
tsinsert_direct                           off
vectorize                                 off
vectorize_row_count_threshold             0

query T colnames
SELECT * FROM [SHOW CLUSTER SETTING sql.defaults.distsql]
----
sql.defaults.distsql
off

query TTTBT colnames
SELECT * FROM [SHOW ALL CLUSTER SETTINGS] WHERE variable LIKE '%organization'
----
variable              value  setting_type  public  description
cluster.organization  ·      s             true    organization name

query TTTT colnames
SELECT * FROM [SHOW CLUSTER SETTINGS] WHERE variable LIKE '%organization'
----
variable              value  setting_type  description
cluster.organization  ·      s             organization name

query TTTT colnames
SELECT * FROM [SHOW PUBLIC CLUSTER SETTINGS] WHERE variable LIKE '%organization'
----
variable              value  setting_type  description
cluster.organization  ·      s             organization name

query T colnames
SELECT * FROM [SHOW SESSION_USER]
----
session_user
root

query T colnames
SELECT * FROM [SHOW DATABASE]
----
database
test

query TT colnames
SELECT * FROM [SHOW ZONE CONFIGURATIONS] LIMIT 0
----
target  raw_config_sql

query TT colnames
SELECT * FROM [SHOW ZONE CONFIGURATION FOR TABLE system.users] LIMIT 0
----
target  raw_config_sql

query TT colnames,rowsort
SELECT * FROM [SHOW DATABASES]
----
database_name  engine_type
defaultdb      RELATIONAL
postgres       RELATIONAL
system         RELATIONAL
test           RELATIONAL

query TTTTT colnames,rowsort
SELECT * FROM [SHOW GRANTS ON system.descriptor]
----
database_name  schema_name  table_name  grantee  privilege_type
system         public       descriptor  admin    GRANT
system         public       descriptor  admin    SELECT
system         public       descriptor  root     GRANT
system         public       descriptor  root     SELECT

query TTBITTBB colnames
SELECT * FROM [SHOW INDEX FROM system.descriptor]
----
table_name  index_name  non_unique  seq_in_index  column_name  direction  storing  implicit
descriptor  primary     false       1             id           ASC        false    false

query TTTTB colnames
SELECT * FROM [SHOW CONSTRAINT FROM system.descriptor]
----
table_name  constraint_name  constraint_type  details               validated
descriptor  primary          PRIMARY KEY      PRIMARY KEY (id ASC)  true

query TTBITTBB colnames
SELECT * FROM [SHOW KEYS FROM system.descriptor]
----
table_name  index_name  non_unique  seq_in_index  column_name  direction  storing  implicit
descriptor  primary     false       1             id           ASC        false    false

query T colnames,rowsort
SELECT * FROM [SHOW SCHEMAS FROM system]
----
schema_name
information_schema
pg_catalog
public
kwdb_internal

query T colnames
SELECT * FROM [SHOW SEQUENCES FROM system]
----
sequence_name

query TT
SELECT * FROM [SHOW TABLES FROM system]
----
namespace                        BASE TABLE
descriptor                       BASE TABLE
users                            BASE TABLE
zones                            BASE TABLE
settings                         BASE TABLE
lease                            BASE TABLE
audits                           BASE TABLE
rangelog                         BASE TABLE
ui                               BASE TABLE
jobs                             BASE TABLE
web_sessions                     BASE TABLE
table_statistics                 BASE TABLE
locations                        BASE TABLE
role_members                     BASE TABLE
comments                         BASE TABLE
replication_constraint_stats     BASE TABLE
replication_critical_localities  BASE TABLE
replication_stats                BASE TABLE
reports_meta                     BASE TABLE
namespace2                       BASE TABLE
protected_ts_meta                BASE TABLE
protected_ts_records             BASE TABLE
role_options                     BASE TABLE
statement_bundle_chunks          BASE TABLE
statement_diagnostics_requests   BASE TABLE
statement_diagnostics            BASE TABLE
kwdb_replication_info            BASE TABLE
bo_black_list                    BASE TABLE
kwdb_ts_table                    BASE TABLE
user_defined_function            BASE TABLE
eventlog                         BASE TABLE
scheduled_jobs                   BASE TABLE

query TTT
SELECT * FROM [SHOW TABLES FROM system WITH COMMENT]
----
namespace                        BASE TABLE         ·
descriptor                       BASE TABLE         ·
users                            BASE TABLE         ·
zones                            BASE TABLE         ·
settings                         BASE TABLE         ·
lease                            BASE TABLE         ·
audits                           BASE TABLE         ·
rangelog                         BASE TABLE         ·
ui                               BASE TABLE         ·
jobs                             BASE TABLE         ·
web_sessions                     BASE TABLE         ·
table_statistics                 BASE TABLE         ·
locations                        BASE TABLE         ·
role_members                     BASE TABLE         ·
comments                         BASE TABLE         ·
replication_constraint_stats     BASE TABLE         ·
replication_critical_localities  BASE TABLE         ·
replication_stats                BASE TABLE         ·
reports_meta                     BASE TABLE         ·
namespace2                       BASE TABLE         ·
protected_ts_meta                BASE TABLE         ·
protected_ts_records             BASE TABLE         ·
role_options                     BASE TABLE         ·
statement_bundle_chunks          BASE TABLE         ·
statement_diagnostics_requests   BASE TABLE         ·
statement_diagnostics            BASE TABLE         ·
kwdb_replication_info            BASE TABLE         ·
bo_black_list                    BASE TABLE         ·
kwdb_ts_table                    BASE TABLE         ·
user_defined_function            BASE TABLE         ·
eventlog                         BASE TABLE         ·
scheduled_jobs                   BASE TABLE         ·

query ITTT colnames
SELECT node_id, user_name, application_name, active_queries
  FROM [SHOW SESSIONS]
 WHERE active_queries != ''
----
node_id  user_name  application_name  active_queries
1        root       ·                 SELECT node_id, user_name, application_name, active_queries FROM [SHOW CLUSTER SESSIONS] WHERE active_queries != ''

query ITT colnames
SELECT node_id, user_name, query FROM [SHOW QUERIES]
----
node_id  user_name  query
1        root       SELECT node_id, user_name, query FROM [SHOW CLUSTER QUERIES]


query T colnames,rowsort
SELECT * FROM [SHOW SCHEMAS]
----
schema_name
information_schema
pg_catalog
public
kwdb_internal

query TT colnames
CREATE TABLE foo(x INT); SELECT * FROM [SHOW TABLES]
----
table_name  table_type
foo         BASE TABLE


query T colnames
SELECT * FROM [SHOW TIMEZONE]
----
timezone
UTC


query T colnames
SELECT * FROM [SHOW TIME ZONE]
----
timezone
UTC


query T colnames
SELECT * FROM [SHOW TRANSACTION ISOLATION LEVEL]
----
transaction_isolation
serializable


query T colnames
SELECT * FROM [SHOW TRANSACTION PRIORITY]
----
transaction_priority
normal

query T colnames
SELECT * FROM [SHOW TRANSACTION STATUS]
----
transaction_status
NoTxn


query TT colnames
SELECT * FROM [SHOW CREATE TABLE system.descriptor]
----
table_name                create_statement
system.public.descriptor  CREATE TABLE descriptor (
                          id INT8 NOT NULL,
                          descriptor BYTES NULL,
                          CONSTRAINT "primary" PRIMARY KEY (id ASC),
                          FAMILY "primary" (id),
                          FAMILY fam_2_descriptor (descriptor)
)


query TT colnames
CREATE VIEW v AS SELECT id FROM system.descriptor; SELECT * FROM [SHOW CREATE VIEW v]
----
table_name  create_statement
v           CREATE VIEW v (id) AS SELECT id FROM system.public.descriptor


query TTT colnames
SELECT * FROM [SHOW USERS] ORDER BY 1
----
username  options     member_of
admin     CREATEROLE  {}
root      CREATEROLE  {admin}
testuser  ·           {}


query TTTI colnames
SELECT start_key, end_key, replicas, lease_holder FROM [SHOW RANGES FROM TABLE system.descriptor]
----
start_key  end_key  replicas  lease_holder
NULL       NULL     {1}       1

query TTTI colnames
CREATE INDEX ix ON foo(x); SELECT start_key, end_key, replicas, lease_holder FROM [SHOW RANGES FROM INDEX foo@ix]
----
start_key  end_key  replicas  lease_holder
NULL       NULL     {1}       1

query TTTTTTT colnames
SELECT * FROM [SHOW TRACE FOR SESSION] LIMIT 0
----
timestamp  age  message  tag  location  operation  span

query TTTT colnames
SELECT * FROM [SHOW COMPACT TRACE FOR SESSION] LIMIT 0
----
age  message  tag  operation

query ITTTTTTTTTTTRTIIIIT colnames
SELECT * FROM [SHOW JOBS] LIMIT 0
----
job_id  job_type  description  statement  user_name  status  running_status  created  started  finished  modified  errord fraction_completed  error  coordinator_id total_num_of_ex total_num_of_success total_num_of_fail time_of_last_success

query TT colnames
SELECT * FROM [SHOW SYNTAX 'select 1; select 2']
----
field  message
sql    SELECT 1
sql    SELECT 2

# Test the SHOW SYNTAX statement. We avoid printing out the line number
# here because that is highly likely to change as code is edited.
query TT colnames
SELECT field, replace(message, e'\n', ' ') AS message FROM [SHOW SYNTAX 'foo']
 WHERE field != 'line'
----
field     message
error     at or near "foo": syntax error
code      42601
file      lexer.go
function  Error
detail    source SQL: foo ^


# Test the SHOW INDEXES FROM DATABASE COMMAND
statement ok
CREATE DATABASE showdbindexestest;

statement ok
CREATE TABLE showdbindexestest.table1 (key1 INT PRIMARY KEY);

statement ok
CREATE TABLE showdbindexestest.table2 (key2 INT PRIMARY KEY);

query TTBITTBB
SHOW INDEXES FROM DATABASE showdbindexestest;
----
table1 primary false 1 key1 ASC false false
table2 primary false 1 key2 ASC false false

statement ok
CREATE DATABASE "$peci@l";

statement ok
CREATE TABLE "$peci@l".table1 (key1 INT PRIMARY KEY);

statement ok
CREATE TABLE "$peci@l".table2 (key2 INT PRIMARY KEY);

query TTBITTBB
SHOW INDEXES FROM DATABASE "$peci@l";
----
table1 primary false 1 key1 ASC false false
table2 primary false 1 key2 ASC false false

# Test SHOW LOCALITY telemetry.
query T
SHOW LOCALITY
----
region=test,dc=dc1

query T
SELECT feature_name FROM kwdb_internal.feature_usage WHERE feature_name='sql.show.locality' AND usage_count > 0
----
sql.show.locality

# Test SHOW INDEXES telemetry.
statement ok
CREATE TABLE show_test (x INT PRIMARY KEY);
SHOW INDEXES FROM show_test

query T
SELECT feature_name FROM kwdb_internal.feature_usage WHERE feature_name='sql.show.indexes' AND usage_count > 0
----
sql.show.indexes

# Test SHOW CONSTRAINTS telemetry.
statement ok
SHOW CONSTRAINTS FROM show_test

query T
SELECT feature_name FROM kwdb_internal.feature_usage WHERE feature_name='sql.show.constraints' AND usage_count > 0
----
sql.show.constraints

# Test SHOW QUERIES telemetry.
statement ok
SHOW QUERIES

query T
SELECT feature_name FROM kwdb_internal.feature_usage WHERE feature_name='sql.show.queries' AND usage_count > 0
----
sql.show.queries

# Test SHOW JOBS telemetry.
statement ok
SHOW JOBS

query T
SELECT feature_name FROM kwdb_internal.feature_usage WHERE feature_name='sql.show.jobs' AND usage_count > 0
----
sql.show.jobs

# Tests identically named indexes do not show up twice with SHOW INDEXES.
subtest regression_46333

statement ok
CREATE TABLE t (
  x INT,
  y INT,
  z INT,
  INDEX i1 (x),
  INDEX i2 (y),
  INDEX i3 (z)
); CREATE TABLE t2 (
  x INT,
  y INT,
  z INT,
  INDEX i1 (x),
  INDEX i2 (y),
  INDEX i3 (z)
); COMMENT ON COLUMN t.x IS 'comment1';
COMMENT ON COLUMN t.z IS 'comm"en"t2';
COMMENT ON INDEX t@i2 IS 'comm''ent3'

query TTBITTBBT
SHOW INDEXES FROM t WITH COMMENT
----
t  primary  false  1  rowid  ASC  false  false  NULL
t  i1       true   1  x      ASC  false  false  NULL
t  i1       true   2  rowid  ASC  false  true   NULL
t  i2       true   1  y      ASC  false  false  comm'ent3
t  i2       true   2  rowid  ASC  false  true   comm'ent3
t  i3       true   1  z      ASC  false  false  NULL
t  i3       true   2  rowid  ASC  false  true   NULL

query TTBITTBBT
SHOW INDEXES FROM t2 WITH COMMENT
----
t2  primary  false  1  rowid  ASC  false  false  NULL
t2  i1       true   1  x      ASC  false  false  NULL
t2  i1       true   2  rowid  ASC  false  true   NULL
t2  i2       true   1  y      ASC  false  false  NULL
t2  i2       true   2  rowid  ASC  false  true   NULL
t2  i3       true   1  z      ASC  false  false  NULL
t2  i3       true   2  rowid  ASC  false  true   NULL
