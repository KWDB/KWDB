# LogicTest: 5node

# These tests are different from explain_analyze because they require manual
# data placement.

statement ok
CREATE TABLE kv (k INT PRIMARY KEY, v INT, FAMILY (k, v))

statement ok
INSERT INTO kv SELECT i, i FROM generate_series(1,5) AS g(i);

statement ok
CREATE TABLE kw (k INT PRIMARY KEY, w INT, FAMILY (k, w))

statement ok
INSERT INTO kw SELECT i, i FROM generate_series(1,5) AS g(i)

# Split into 5 parts, each row from each table goes to one node.
statement ok
ALTER TABLE kv SPLIT AT SELECT i FROM generate_series(1,5) AS g(i)

statement ok
ALTER TABLE kw SPLIT AT SELECT i FROM generate_series(1,5) AS g(i)

statement ok
ALTER TABLE kv EXPERIMENTAL_RELOCATE SELECT ARRAY[i], i FROM generate_series(1, 5) as g(i)

statement ok
ALTER TABLE kw EXPERIMENTAL_RELOCATE SELECT ARRAY[i], i FROM generate_series(1, 5) as g(i)

# Verify that EXPLAIN ANALYZE (DISTSQL) annotates plans with collected
# statistics.

# Verify data placement.
query TTTI colnames,rowsort
SELECT start_key, end_key, replicas, lease_holder from [SHOW RANGES FROM TABLE kv]
----
start_key  end_key  replicas  lease_holder
NULL       /1       {1}       1
/1         /2       {1}       1
/2         /3       {2}       2
/3         /4       {3}       3
/4         /5       {4}       4
/5         NULL     {5}       5

# Verify data placement.
query TTTI colnames,rowsort
SELECT start_key, end_key, replicas, lease_holder from [SHOW RANGES FROM TABLE kw]
----
start_key  end_key  replicas  lease_holder
NULL       /1       {5}       5
/1         /2       {1}       1
/2         /3       {2}       2
/3         /4       {3}       3
/4         /5       {4}       4
/5         NULL     {5}       5

# This query verifies stat collection for the tableReader, mergeJoiner, and
# aggregator.
query T
SELECT url FROM [EXPLAIN ANALYZE (DISTSQL) SELECT kv.k, avg(kw.k) FROM kv JOIN kw ON kv.k=kw.k GROUP BY kv.k]
----
eJzkmVFvo0YQx9_7KVb7lNPhg11w4iCd5Nw1rXx17DR2pKYnKyJh6yDb4C44uSjKd6-AnGKD2WG93pRr3zDs_JkZht_-hZ9w_Pccu3h02j_9PEYrPke_XAzP0NfTP877J70BOhmc9K_-PEUHP_dG49Hv_XfoZens_sPMQN799GD28GH2Lg-b3aMvw94AzR7QcJAtQR9Reh39ejG8PEefrrKTE2zgMPLZwFuwGLtfMcEGptjANjawgw3cxhMDL3l0y-I44umSpyyg53_DrmXgIFyukvT0xMC3EWfYfcJJkMwZdvHYu5mzC-b5jJsWNrDPEi-YZ7eZ3XeXPFh4_BEbeLT0wthFLTO98XCVuKhL8qPlKhk_LlnsoiBM0nR49BAjzjzfRemSOPHmc5QEC-YiK8YGvnlM2PcF9Bh9wpNnA0eZUJ7799xuHtGdF99tZtUlePI8yWSnDLvk2dit2MNCsQ_lYk3SuHJpZbmvOhH3GWd-Ued9euNaq7Z07ozxKfsSBSHjJinMyZz9lRx0yft3H3kwvcsPX7tmdNMWpmtQoVPZuVK7Mo3i0vxkae3C-4YWbBHxR7SKWdpfC_0WFDv82j1bZlhOplPOpl4ScZO0Sw_FwMO8gS-TcTK4uh4Mx9eDy37_oEvSBowuzw66ND36PLwcjF-Ot43Qxjmf3QYLb75laY1hq9cRuZlz1GZO3FpqqbV2dHl23Uuba6e_LljoM56NHepSs2vLNXw_3X3tXLtG51bhtt5tbdsgakVLkxaGcS3pdjnpqtQON1Ij9blJ4E3CpC3TbhY3ya7lHtXYJppXLq0s9w23CaK-TVj1twmrapuotxkAI7G-GRw2cDOwoDdfBfnS8wMgnzQT-WAPq8BO6-OE1qCn3TKdZuGE7FpupwY9m1curSz3DelJfyR6AiOxTs-j_xs9pecHoCf9j9HTro8TuwY9nZbZbhZOyK7lHtegZ_PKpZXlviE9bXV6OvXp6ej6RAEMyzpXOw3kqvPvfKKQnjmAuHYziavQ3SoWO_Xh5NRgcbvVLDSRXYttwyRumQR5oY8IipI7xptVOK0s_A2Z7PxIjhYYjnXyHjeQvFodrfT8AHx1msnXnR0t8MfCBYuXURizzaqxgSvlrbSDzJ-yvONxtOK37JxHt9m98p95PdnHGp_FSX6V5j96YX4pzbJ-cGczOMsmS-yFTTELExdZOZpkhImtTVlbzlQhZyLxjKhc8Ga9dH9ZFZ7RPpW15UwVcqZFZWtdeVPYKgbbwrQc8UsoDibW7nMHKLd1KVNtOVOFnB3hE26LH1JbGEwPxfNxKANpmZrEwh1xTeJgFUgDygqQBjqpkPORDKT3J9wR018crAJpQFkB0kAnFXLuCN_CY_FLeCwDaZmsxMJFgEtGKwBPrKwCaUBZIWdScmEiSkspy7iwfSor0A5QLiJaNlxfZkpuuWTF9kViQFnFl4qVi5yWDdeXmQqNScmrbbyrxBHzmJQM2b6ADCirWGpIGrCRQLgKkyFpFXSK3a-KsjZnDCiroE-fb4akAUMPdVMlM232GFBWQZ8-8wxJA64e6qZKZmKPTACTTLS5ZEBZCcr6PDQgXQS2bLhCZlSbU6banDKgrABlQFkFypC0vqyLwC6Fa3PKgLIClAFlFShD0vqyLgK7FC52yhRwylSbUwaUVaAMSasASp-LhqQBf0_355Qnzz_9EwAA__9VYixP

# This query verifies stats collection for the hashJoiner, distinct and sorter.
query T
SELECT url FROM [EXPLAIN ANALYZE (DISTSQL) SELECT DISTINCT(kw.w) FROM kv JOIN kw ON kv.k = kw.w ORDER BY kw.w]
----
eJzcmEFv4jgUx-_7Kax3arVhEjsBSqSR2pmyWma7MAscdnbEISXeEgEJa5syqOp3XyWZEU0yteM6Rag3An7_vPfs3982D8D_W4EPk_5N_-MUbdkK_TYe_Ym-9v_-fHM1GKKr4dXNl3_66Ox6MJlO_ro5R9-Hps-D4ccpOlvu3u3O87DlPfo0GgzRcodGQ7S8f7dE71H6OxqNr_tj9OFL9jQDC-IkpMNgTTn4XwGDBQQscMECDyxow8yCDUvmlPOEpUMesoBB-A18x4Io3mxF-vXMgnnCKPgPICKxouDDNLhd0TENQspsBywIqQiiVfaa5f3lhkXrgO3BgskmiLmPWnb64tFW-OgS5582WzHdbyj3URSLNB2W7DhiNAh9lA7hIlitkIjW1EcOBwtu94L-GEB66APMHi1IMqE89x-53e7RIuCLYlaXGGaPs0z2joKPH62XFdspFburFmvjp-WSUyiXPFvuQWcbJyykjIYFpVkaqRryk579HvDFpySKKbNxaYGs6L_i7BKfv2fR3SL7pGxWGoJKHcu-q7Qt0ywPzb-sjOUiYTREPAqpj7IxYME6-IbWdJ2wPdpyGvrIddAfUbn9h9a6OivpOuIiiufCxu3KfL1smVTSxfJ0PYOVICuIOD8p6Eny7SaSb-v0epIwQZlNcDmxX9WtbiTbjk62w6SVbGxCisnKU3ruxd3Ci3F9c8NqJ7dJy3ZP2cs1yu3W8PJCuSfo5fjIXo4b93Knvpc7Nb08latp2IrlcjDsjr5hO_WRLdoyqb-GSQ1k3ZbtnTKyGuVe1EC2UO4JIkuOjCx5Y8gqlssB2e4RkXXrr2G3BrJey26fMrIa5fZqIFso9wSRdY-MrNs4sl59ZL2j3pgUK-lA84U-zV7zNyav_sL3anDebp0y5RrFttWUt2yMgjhEGCViQdkp8-4dmXfvjW3RioVzgLp3xC1acQMfU75JYk6LGYEFz8o76bTS8I7my4QnWzann1kyz96VP-bFZPeMkHKR_0ryh0Gc_5RmWT-4VwzOsskS-w4Ep7HwkZPzoCOM3VdT7r6WMsEvV8Yac0T0gotzRJrLqjRHTSp3X0u5NEdayqSs7DxVLjbDKQe70mBPDqEnDW7L39yWBnfkwR1pMFEU3dVxHp2pkAv35N2UB5s4j0LZwHkUnTRwngsd52lOuCe3NHmwifMolA2cR9FJA-fpSSnEjpxCXNm2ZN6j5bU621aTygbnDoVyGX_dcAPGVd00OV5U9q6mKFcomxw-5MplD9ANNzliKLppQDqWnxOwp0BdflIwQb1yjGgMdbmyCepyZZOdXiXdVbiIopsmqFeObI2hLlc2QV2ubHTRUEh3FS6i6KYJ6pUzXRH1CwXqleNGY6hXjhuNoS5XNkFdrmyEukLaZMdXdBrLXYTo_LOjd9XV-dunSWUT1FXSBju-qtNY7iKkcrIrXqOJHHUi_-dBB_XZ4y__BwAA__8axqjt

# This query verifies stats collection for WITH ORDINALITY and the hashJoiner.
query T
SELECT url FROM [EXPLAIN ANALYZE (DISTSQL) SELECT * FROM kv WITH ORDINALITY AS a, kv WITH ORDINALITY AS b]
----
eJzMUsFu00AQvfMVozkBWtQ4djjsyYEG1RCSkliCUvmwyQ7pqrbX7K5Loyj_jmwXUSfYEMSBo9--N2_eG-_Qfk2R43IynbyOoTQpvFnM38P15NPldBzNYDwbT68-T-DpebSMlx-mz-CB-rwh3t7Bxyi-gPniPJqNp1F8BeMlCNbxsEqQYa4lzURGFvk1epgwLIxek7XaVNCuJkTyHvmAocqL0lVwwnCtDSHfoVMuJeQYi1VKCxKSzNkAGUpyQqX12Nu7sDAqE2aLDJeFyC2HF8hwXrqidPG2IMtB5S7owIz-ZsGQkBxGyNA6kabgVEYcBhYZrraOfhC8YASvMNkz1PWkh22tExtC7u3ZnyeaG6lykSq3PfPagfoX6jIfnmL-uM7h_1qn_5d1-v-izqDT_KdnmWsjyZBsGSaV8neUXyS4EPbmrVY5mbOgnWBeOg6hx8IhC30WBiwcsfAlMkzpi4ODfDV21LpRm5sjagMeca3ThiRYJYlDzUGGmbiHjDJttlBakhz8AbxT3ccbnXK8BdlC55basZFh5_hB1SDJDTUXsbo0a7o0el17NZ_N31kDkqxrXr3mI8qbp2rLx2KvVxy0xN6heNgr9vud_ROch4fioFc8OnBO9k--BwAA___ONPWV

# Verify that EXPLAIN ANALYZE on an unsupported query doesn't return an error.
statement ok
EXPLAIN ANALYZE (DISTSQL) SHOW QUERIES;

statement ok
EXPLAIN ANALYZE (DISTSQL) EXPLAIN SELECT 1

# This query verifies support for zeroNode in DistSQL.
query B
SELECT automatic FROM [EXPLAIN (DISTSQL) SELECT sum(k) FROM kv WHERE FALSE]
----
true
